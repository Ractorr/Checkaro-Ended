"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
const eventPromised_1 = require("../utils/eventPromised");
const steps_1 = require("../steps");
/**
 * Subscribe to Frontity newsletter.
 *
 * @param email - The email to be subscribed.
 * @param emit - The eventEmitter to send messages.
 * @param reject - The promise reject method in case something goes wrong.
 */
const subscribeCommand = async (email, emit, reject) => {
    try {
        emit("message", "Subscribing to frontity");
        await (0, steps_1.subscribe)();
    }
    catch (error) {
        reject(error);
    }
};
exports.default = (email) => 
// EventPromised is a combination of EventEmitter and Promise
new eventPromised_1.EventPromised((resolve, reject, emit) => {
    subscribeCommand(email, emit, reject).then(() => resolve(true));
});
